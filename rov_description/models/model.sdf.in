<?xml version='1.0' encoding='UTF-8'?>
<sdf version="1.6">
  <model name="orca4">
    <pose>0 0 0 0 0 0</pose>

    <!-- BlueROV2 thruster reference: http://www.ardusub.com/introduction/features.html -->
    <!-- fluid_density: @fluid_density -->
    <!-- displaced_mass: @displaced_mass -->

    <link name="base_link">
      <inertial>
        <pose>0 0 @mass_z 0 0 0</pose>
        <mass>@mass</mass>
        <inertia>
          <ixx>@ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@iyy</iyy>
          <iyz>0</iyz>
          <izz>@izz</izz>
        </inertia>
      </inertial>

      <visual name="base_link_visual">
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/bluerov2.dae</uri>
            <scale>0.025 0.025 0.025</scale>
          </mesh>
        </geometry>
      </visual>

      <!-- Collision volume * fluid_density == displaced mass, used by BuoyancyPlugin -->
      <collision name="base_link_collision">
        <pose>0 0 @volume_z 0 0 0</pose>
        <geometry>
          <box>
            <size>@collision_x @collision_y @collision_z</size>
          </box>
        </geometry>
      </collision>

      <!-- IMU sensor gyro and accel data will be sent to ArduSub -->
      <sensor name="imu_sensor" type="imu">
        <!-- Transform from the Gazebo body frame (x-forward, y-left, z-up)
             to the ArduPilot body frame (x-forward, y-right, z-down) -->
        <pose>0 0 0 @d180 0 0</pose>
        <always_on>1</always_on>
        <update_rate>1000.0</update_rate>
      </sensor>

    </link>

    <!-- Hydrodynamics plugin -->
    <plugin
        filename="gz-sim-hydrodynamics-system"
        name="gz::sim::systems::Hydrodynamics">
      <link_name>base_link</link_name>
      <water_density>@fluid_density</water_density>
      <!-- Added mass: -->
      <xDotU>0</xDotU>
      <yDotV>0</yDotV>
      <zDotW>0</zDotW>
      <kDotP>0</kDotP>
      <mDotQ>0</mDotQ>
      <nDotR>0</nDotR>
      <!-- First order stability derivative: -->
      <xU>0</xU>
      <yV>0</yV>
      <zW>0</zW>
      <kP>0</kP>
      <mQ>0</mQ>
      <nR>0</nR>
      <!-- Second order stability derivative: -->
      <xUabsU>@xUabsU</xUabsU>
      <yVabsV>@yVabsV</yVabsV>
      <zWabsW>@zWabsW</zWabsW>
      <kPabsP>@kPabsP</kPabsP>
      <mQabsQ>@mQabsQ</mQabsQ>
      <nRabsR>@nRabsR</nRabsR>
    </plugin>

    <link name="thruster1">
      <pose>@thruster_x -@thruster_y 0 -@d90 @d90 -@d45</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 @d90 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-cw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster2">
      <pose>@thruster_x @thruster_y 0 -@d90 @d90 -@d135</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 -@d90 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-ccw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster3">
      <pose>-@thruster_x -@thruster_y 0 -@d90 @d90 @d45</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 -@d90 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-ccw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster4">
      <pose>-@thruster_x @thruster_y 0 -@d90 @d90 @d135</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 @d90 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-cw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster5">
      <pose>0 -@vert_thruster_y @vert_thruster_z 0 0 0</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 -@d90 0 @d90</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-ccw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster6">
      <pose>0 @vert_thruster_y @vert_thruster_z 0 0 0</pose>
      <visual name="thruster_prop_visual">
        <pose>0 0 0 @d90 0 @d90</pose>
        <geometry>
          <mesh>
            <uri>model://orca4/meshes/t200-cw-prop.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <mass>@propeller_mass</mass>
        <inertia>
          <ixx>@propeller_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@propeller_iyy</iyy>
          <iyz>0</iyz>
          <izz>@propeller_izz</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="thruster1_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster1</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="thruster2_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster2</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="thruster3_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster3</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="thruster4_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster4</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="thruster5_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster5</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="thruster6_joint" type="revolute">
      <parent>base_link</parent>
      <child>thruster6</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster1_joint</joint_name>
      <thrust_coefficient>@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster2_joint</joint_name>
      <thrust_coefficient>@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster3_joint</joint_name>
      <!-- Reverse spin to balance torque -->
      <thrust_coefficient>-@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster4_joint</joint_name>
      <!-- Reverse spin to balance torque -->
      <thrust_coefficient>-@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster5_joint</joint_name>
      <thrust_coefficient>@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin
        filename="gz-sim-thruster-system"
        name="gz::sim::systems::Thruster">
      <namespace>orca4</namespace>
      <joint_name>thruster6_joint</joint_name>
      <!-- Reverse spin to balance torque -->
      <thrust_coefficient>-@thrust_coefficient</thrust_coefficient>
      <fluid_density>@fluid_density</fluid_density>
      <propeller_diameter>@propeller_diameter</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>@use_angvel_cmd</use_angvel_cmd>
    </plugin>

    <plugin name="ArduPilotPlugin" filename="libArduPilotPlugin.so">
      <!-- Port settings -->
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <lock_step>1</lock_step>

      <!-- Transform from the Gazebo body frame (x-forward, y-left, z-up)
           to the ArduPilot body frame (x-forward, y-right, z-down) -->
      <modelXYZToAirplaneXForwardZDown>0 0 0 @d180 0 0</modelXYZToAirplaneXForwardZDown>

      <!-- Transform from the Gazebo world frame (ENU)
           to the ArduPilot world frame (NED) -->
      <gazeboXYZToNED>0 0 0 @d180 0 @d90</gazeboXYZToNED>

      <!-- Sensors -->
      <imuName>imu_sensor</imuName>

      <!-- Thrusters -->
      <control channel="0">
        <jointName>thruster1_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster1_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@ccw_control_multiplier</multiplier>
      </control>
      <control channel="1">
        <jointName>thruster2_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster2_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@ccw_control_multiplier</multiplier>
      </control>
      <control channel="2">
        <jointName>thruster3_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster3_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@cw_control_multiplier</multiplier>
      </control>
      <control channel="3">
        <jointName>thruster4_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster4_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@cw_control_multiplier</multiplier>
      </control>
      <control channel="4">
        <jointName>thruster5_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster5_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@ccw_control_multiplier</multiplier>
      </control>
      <control channel="5">
        <jointName>thruster6_joint</jointName>
        <servo_min>@servo_min</servo_min>
        <servo_max>@servo_max</servo_max>
        <type>COMMAND</type>
        <cmd_topic>@thruster6_topic</cmd_topic>
        <offset>@control_offset</offset>
        <multiplier>@cw_control_multiplier</multiplier>
      </control>

    </plugin>

    <!-- Left camera link -->
    <link name="left_camera_link">
      <pose>@camera_x @camera_y @camera_z 0 0 0</pose>
      <visual name="left_camera_tube">
        <transparency>0.5</transparency>
        <geometry>
          <cylinder>
            <length>@camera_height</length>
            <radius>@camera_radius</radius>
          </cylinder>
        </geometry>
      </visual>
      <sensor name="left_camera" type="camera">
        <pose>0 0 @camera_sensor_z 0 @d90 0</pose>
        <camera>
          <horizontal_fov>1.4</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
          </image>
          <clip>
            <near>0.2</near>
            <far>@camera_far_clip</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>5</update_rate>
        <visualize>true</visualize>
        <topic>stereo_left</topic>
      </sensor>
      <inertial>
        <mass>@camera_mass</mass>
        <inertia>
          <ixx>@camera_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@camera_iyy</iyy>
          <iyz>0</iyz>
          <izz>@camera_izz</izz>
        </inertia>
      </inertial>
    </link>

    <!-- Attach left_camera_link to base_link -->
    <joint name="left_camera_joint" type="fixed">
      <!-- <pose>-0.15 0.18 -0.0675 0 @d90 0</pose> -->
      <parent>base_link</parent>
      <child>left_camera_link</child>
    </joint>

    <!-- Right camera link -->
    <link name="right_camera_link">
      <pose>@camera_x -@camera_y @camera_z 0 0 0</pose>
      <visual name="right_camera_tube">
        <transparency>0.5</transparency>
        <geometry>
          <cylinder>
            <length>@camera_height</length>
            <radius>@camera_radius</radius>
          </cylinder>
        </geometry>
      </visual>
      <sensor name="right_camera" type="camera">
        <pose>0 0 @camera_sensor_z 0 @d90 0</pose>
        <camera>
          <horizontal_fov>1.4</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
          </image>
          <clip>
            <near>0.2</near>
            <far>@camera_far_clip</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>5</update_rate>
        <visualize>true</visualize>
        <topic>stereo_right</topic>
      </sensor>
      <inertial>
        <mass>@camera_mass</mass>
        <inertia>
          <ixx>@camera_ixx</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>@camera_iyy</iyy>
          <iyz>0</iyz>
          <izz>@camera_izz</izz>
        </inertia>
      </inertial>
    </link>

    <!-- Attach right_camera_link to base_link -->
    <joint name="right_camera_joint" type="fixed">
      <!-- <pose>-0.15 -0.18 -0.0675 0 @d90 0</pose> -->
      <parent>base_link</parent>
      <child>right_camera_link</child>
    </joint>

    <!-- Publish the ground-truth pose for rviz -->
    <plugin
        filename="gz-sim-odometry-publisher-system"
        name="gz::sim::systems::OdometryPublisher">
      <odom_frame>map</odom_frame>
      <robot_base_frame>orca4</robot_base_frame>
      <dimensions>3</dimensions>
    </plugin>

  </model>
</sdf>
</sdf>

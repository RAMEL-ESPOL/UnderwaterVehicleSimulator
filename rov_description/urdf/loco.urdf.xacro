<?xml version="1.0"?>
<robot name="loco" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!--<xacro:property name="pi" value="3.14159265359" />-->
  <xacro:property name="negligible" value="1e-5" />
  <xacro:property name="blade_geometry" value="0.015 0.02 .003" />

  <material name="Gray">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="Black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <link name="loco_base_frame">
  </link>

  <link name="loco_shell">
    <visual>
      <!--The origin shift visually shifts the model to CAD model origin-->
      <origin xyz=".3655 -0.1725 -0.071" rpy="${pi/2} 0 ${pi}" />
      <!--<origin xyz=".383 -0.172 -0.0705" rpy="${pi/2} 0 ${pi}" />-->.0175
      <geometry>
        <mesh filename="package://rov_description/meshes/LoCO_Shell.STL" scale="1 1 1" />
      </geometry>
      <material name="Gray"/>
    </visual>
    <collision>
      <geometry>
	      <!--Bounding box for collision geometry used to decrease computational requirements.-->
        <box size=".731 .345 .142"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="13.2"/>
      <inertia ixx=".15" ixy="0.0" ixz="0.0" iyy=".66" iyz="0.0" izz=".53"/>
    </inertial>
  </link>

  <joint name="base_frame_to_shell" type="fixed">
    <parent link="loco_base_frame"/>
    <child link="loco_shell"/>
    <origin xyz="0 0 0"/>
  </joint>


  <link name="left_camera">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.0719 0.029 0.029"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.0719 0.029 0.029"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>
  </link>

  <joint name="shell_to_left_camera" type="fixed">
    <parent link="loco_shell"/>
    <child link="left_camera"/>
    <origin xyz="0.2945 0.108 0"/>
  </joint>

  <link name="right_camera">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.0719 0.029 0.029"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.0719 0.029 0.029"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>
  </link>

  <joint name="shell_to_right_camera" type="fixed">
    <parent link="loco_shell"/>
    <child link="right_camera"/>
    <origin xyz="0.2945 -0.108 0"/>
  </joint>

  <link name="vertical_thruster">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>

    <visual>
      <origin xyz="0.03 0 0" rpy="${-pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="-0.03 0 0" rpy="${pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>
  </link>

  <joint name="shell_to_vert_thrust" type="continuous">
    <parent link="loco_shell"/>
    <child link="vertical_thruster"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0.2415 0 0"/>
  </joint>


  <link name="left_thruster">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>

    <visual>
      <origin xyz="0.03 0 0" rpy="${pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="-0.03 0 0" rpy="${-pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>
  </link>

  <joint name="shell_to_left_thrust" type="continuous">
    <parent link="loco_shell"/>
    <child link="left_thruster"/>
    <axis xyz="0 0 1"/>
    <origin xyz="-0.3195 0.109 0" rpy="0 ${pi/2} 0"/>
    <!--In actual model: <origin xyz="-0.302 0.109 -0.000635" rpy="0 ${pi/2} 0"/> -->
  </joint>


  <link name="right_thruster">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>

    <visual>
      <origin xyz="0.03 0 0" rpy="${-pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="-0.03 0 0" rpy="${pi/4} 0 0"/>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${blade_geometry}"/>
      </geometry>
    </collision>
  </link>

  <joint name="shell_to_right_thrust" type="continuous">
    <parent link="loco_shell"/>
    <child link="right_thruster"/>
    <axis xyz="0 0 1"/>
    <origin xyz="-0.3195 -0.109 0" rpy="0 ${pi/2} 0"/>
    <!--In actual model: <origin xyz="-0.302 -0.109 -0.000635" rpy="0 ${pi/2} 0"/> -->
  </joint>

  <link name="ping_sonar">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>

    <!--<visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0225" length="0.0345"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.0225" length="0.0345"/>
      </geometry>
    </collision>-->
  </link>

  <joint name="shell_to_ping_sonar" type="fixed">
    <parent link="loco_shell"/>
    <child link="ping_sonar"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    <!--<origin xyz="-0.0599 0 -0.01859" rpy="${pi} 0 0"/> This matches model appearance,
    but z is set to 0 for purpose of ping sonar data-->
  </joint>


  <!--In place of a pressure-based depth sensor, depth information is obtained from a laser scanner similar to the ping sonar, located at the exact same position as the ping sonar.-->
  <link name="depth_sensor">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertial>
      <mass value="${negligible}"/>
      <inertia ixx="${negligible}" ixy="0.00" ixz="0.00" iyy="${negligible}" iyz="0.00" izz="${negligible}"/>
    </inertial>

    <!--<visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0225" length="0.0345"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.0225" length="0.0345"/>
      </geometry>
    </collision>-->
  </link>

  <joint name="shell_to_depth_sensor" type="fixed">
    <parent link="loco_shell"/>
    <child link="depth_sensor"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    <!--<origin xyz="-0.0599 0 -0.01859" rpy="${pi} 0 0"/> This matches model appearance,
    but z is set to 0 for purpose of depth sensor data-->
  </joint>




<!--GAZEBO REFERENCES AND PLUGINS-->

  <gazebo reference="loco_shell">
    <material>Gazebo/GreyTransparent</material>
  </gazebo>

  <gazebo reference="right_camera">
   <sensor type="camera" name="right_camera">
     <update_rate>20.0</update_rate>
     <camera name="head">
       <horizontal_fov>1.3962634</horizontal_fov>
       <image>
         <width>2064</width>
         <height>1085</height>
         <format>R8G8B8</format>
       </image>
       <clip>
         <near>0.02</near>
         <far>300</far>
       </clip>
       <noise>
         <type>gaussian</type>
         <!-- Noise is sampled independently per pixel on each frame.
              That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
         <mean>0.0</mean>
         <stddev>0.01</stddev>
       </noise>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
       <alwaysOn>true</alwaysOn>
       <updateRate>0.0</updateRate>
       <cameraName>right_camera</cameraName>
       <imageTopicName>image_raw</imageTopicName>
       <cameraInfoTopicName>right_camera_info</cameraInfoTopicName>
       <frameName>right_camera</frameName>
       <hackBaseline>0.07</hackBaseline>
       <distortionK1>0.0</distortionK1>
       <distortionK2>0.0</distortionK2>
       <distortionK3>0.0</distortionK3>
       <distortionT1>0.0</distortionT1>
       <distortionT2>0.0</distortionT2>
     </plugin>
   </sensor>
   <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="left_camera">
   <sensor type="camera" name="left_camera">
     <update_rate>20.0</update_rate>
     <camera name="head">
       <horizontal_fov>1.3962634</horizontal_fov>
       <image>
         <width>2064</width>
         <height>1085</height>
         <format>R8G8B8</format>
       </image>
       <clip>
         <near>0.02</near>
         <far>300</far>
       </clip>
       <noise>
         <type>gaussian</type>
         <!-- Noise is sampled independently per pixel on each frame.
              That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
         <mean>0.0</mean>
         <stddev>0.01</stddev>
       </noise>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
       <alwaysOn>true</alwaysOn>
       <updateRate>0.0</updateRate>
       <cameraName>left_camera</cameraName>
       <imageTopicName>image_raw</imageTopicName>
       <cameraInfoTopicName>left_camera_info</cameraInfoTopicName>
       <frameName>left_camera</frameName>
       <hackBaseline>0.07</hackBaseline>
       <distortionK1>0.0</distortionK1>
       <distortionK2>0.0</distortionK2>
       <distortionK3>0.0</distortionK3>
       <distortionT1>0.0</distortionT1>
       <distortionT2>0.0</distortionT2>
     </plugin>
   </sensor>
   <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="vertical_thruster">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="right_thruster">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="left_thruster">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="ping_sonar">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="depth_sensor">
    <material>Gazebo/Black</material>
  </gazebo>


  <gazebo>
    <plugin name="buoyancy" filename="libBuoyancyPlugin.so">
      <fluid_density>1000</fluid_density>
      <link name="loco_base_frame">
          <!--Volume measurement manually adjusted to match actual mass.  Purpose of this
          plugin is to make LoCO neutrally buoyant, which would be accomplished
          with ballasting adjustments in the real world.-->
          <center_of_volume>0 0 0</center_of_volume>
          <volume>0.0132</volume>
      </link>
      <link name="vertical_thruster">
          <center_of_volume>0 0 0</center_of_volume>
          <volume>1e-8</volume>
      </link>
      <link name="right_thruster">
          <center_of_volume>0 0 0</center_of_volume>
          <volume>1e-8</volume>
      </link>
      <link name="left_thruster">
          <center_of_volume>0 0 0</center_of_volume>
          <volume>1e-8</volume>
      </link>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/loco</robotNamespace>
    </plugin>
  </gazebo>

  <gazebo>
      <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
        <bodyName>left_thruster</bodyName>
        <topicName>left_thrust</topicName>
      </plugin>
  </gazebo>

  <gazebo>
      <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
        <bodyName>right_thruster</bodyName>
        <topicName>right_thrust</topicName>
      </plugin>
  </gazebo>

  <gazebo>
      <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
        <bodyName>vertical_thruster</bodyName>
        <topicName>/vertical_thrust</topicName>
      </plugin>
  </gazebo>

  <gazebo>
      <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
        <bodyName>loco_base_frame</bodyName>
        <topicName>/drag_force</topicName>
      </plugin>
  </gazebo>

  <gazebo reference="ping_sonar">
   <sensor type="ray" name="ping_sonar">
     <pose>0 0 0 0 0 0</pose>
     <visualize>true</visualize>
     <update_rate>1</update_rate>
     <ray>
       <scan>
         <!-- The scanning details are structured around outstanding Gazebo issues.
         Two distance measurements are output from the output rostopic, but they both
         represent the same measurement, so only one should be used.-->
         <horizontal>
           <samples>1</samples>
           <resolution>1</resolution>
           <min_angle>.000001</min_angle>
           <max_angle>0</max_angle>
         </horizontal>
         <vertical>
           <samples>2</samples>
           <resolution>1</resolution>
           <min_angle>1.570796</min_angle>
           <max_angle>1.570795</max_angle>
         </vertical>
       </scan>
       <range>
         <min>0.5</min>
         <max>30.0</max>
         <resolution>0.01</resolution>
       </range>
       <noise>
         <type>gaussian</type>
         <mean>0.0</mean>
         <stddev>0.01</stddev>
         <!--<stddev>0.01</stddev> this is actual value of current ping sonar -->
       </noise>
     </ray>
     <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
       <topicName>/sonar_data</topicName>
       <frameName>ping_sonar</frameName>
     </plugin>
   </sensor>
  </gazebo>

  <gazebo reference="depth_sensor">
   <sensor type="ray" name="depth_sensor">
     <pose>0 0 0 0 0 0</pose>
     <visualize>true</visualize>
     <update_rate>1</update_rate>
     <ray>
       <scan>
         <!--The scanning details are structured around outstanding Gazebo issues.
         Two distance measurements are output from the output rostopic, but they both
         represent the same measurement, so only one should be used.-->
         <horizontal>
           <samples>1</samples>
           <resolution>1</resolution>
           <min_angle>.000001</min_angle>
           <max_angle>0</max_angle>
         </horizontal>
         <vertical>
           <samples>2</samples>
           <resolution>1</resolution>
           <min_angle>-1.570796</min_angle>
           <max_angle>-1.570795</max_angle>
         </vertical>
       </scan>
       <range>
         <min>0.5</min>
         <max>30.0</max>
         <resolution>0.01</resolution>
       </range>
       <noise>
         <type>gaussian</type>
         <mean>0.0</mean>
         <stddev>0.01</stddev>
         <!--<stddev>0.01</stddev> this is actual value of current ping sonar -->
       </noise>
     </ray>
     <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
       <topicName>/depth_data</topicName>
       <frameName>depth_sensor</frameName>
     </plugin>
   </sensor>
  </gazebo>



</robot>